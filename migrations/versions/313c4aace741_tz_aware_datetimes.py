"""tz-aware-datetimes

Revision ID: 313c4aace741
Revises: 69ea1652a085
Create Date: 2025-08-16 15:55:53.614666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '313c4aace741'
down_revision = '69ea1652a085'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profissional',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('especialidade', sa.String(length=120), nullable=True),
    sa.Column('criado_em', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('profissional', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_profissional_email'), ['email'], unique=True)

    op.create_table('agenda',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profissional_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('hora', sa.Time(), nullable=False),
    sa.Column('disponivel', sa.Boolean(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['profissional_id'], ['profissional.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profissional_id', 'data', 'hora', name='uq_agenda_slot')
    )
    with op.batch_alter_table('agenda', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_agenda_profissional_id'), ['profissional_id'], unique=False)

    op.create_table('consulta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paciente_id', sa.Integer(), nullable=False),
    sa.Column('profissional_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('hora', sa.Time(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status_open', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['paciente_id'], ['paciente.id'], ),
    sa.ForeignKeyConstraint(['profissional_id'], ['profissional.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profissional_id', 'data', 'hora', 'status_open', name='uq_consulta_slot_aberta')
    )
    with op.batch_alter_table('consulta', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_consulta_paciente_id'), ['paciente_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_consulta_profissional_id'), ['profissional_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('consulta', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_consulta_profissional_id'))
        batch_op.drop_index(batch_op.f('ix_consulta_paciente_id'))

    op.drop_table('consulta')
    with op.batch_alter_table('agenda', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_agenda_profissional_id'))

    op.drop_table('agenda')
    with op.batch_alter_table('profissional', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_profissional_email'))

    op.drop_table('profissional')
    # ### end Alembic commands ###
